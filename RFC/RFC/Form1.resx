<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.BackgroundImage" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        jrp6gKyR0PFR4iSoPti57UCOe7SQQYci8y+19JRsPDEDS7DDGSad/RvZX+KgeF8nTBy7uludnl0QREsd
        po++B2i2me8AseM6EBlBypDPV7ErIOS7wAwBjo9O7FIEoBFLPkTPiabVb0qBWe/o59xetl1uhE2GQ4S7
        7K1PbeX/APUoX1deAg8gG6DL7aTSa+XPXVTvdd/4ABhcX2+4H/1AAoKPSqu0u+8QCrHeKHohAAGrlnk+
        sT6/uV7hBX4mUMTCZwoKlQ8q+gFwq+vt6yo+H5JfcOsOJRxmZdfJICgBwdWzyn5Q9BCvQonRP49YXMUw
        8MVs+1fj9J2S7Fm3/ZScv1egTmgXG3L8PrkUatOXmJ8JwLP3Nm/CQnCL3ZhM/bSZg8r0UBnaqhlcD5/Y
        Cxs+5RC2VkgDQDx6Wk7cPz/ZCx2EMab0wrdLqEfxcfooW25465mlpnmNPL+yMuwpJkl7EiAKsd5YizTG
        YDlrXTp/D0tRkMArMyBulCbcKzD7oXHb9ozAu0b7tXMp4bkxO+CYnYfHVPbSssD7iP5S1WX3H/03/9oA
        DAMBAAIAAwAAABD3333333333333333333333rL3333333333vjt7x733333330zT+NQBbf33332nOb4
        AqEoCX/33336ZX+e63wkS3f332vLIfa3G86/ofz3318Ob6727+tM1T3337ekL6mH6rWJz332ns3/AMu+
        f+sc99997QiGN/8A/wCX3333331rW7//AP8AzffffffffTe3/wD+L3333333331413/z333333333333
        33333333/8QAJBEBAAICAQMFAQEBAAAAAAAAAQARITFBIDBREGFxkaFAgeH/2gAIAQMBAT8Q/m3NOU/c
        uUVvGPyGsSh21T4g9iqDHmDOyNy5AlMKoxLAbg1EDxMR45eG4euT7XRETjx1GQ6g9IIrZL9GaZgjqXy0
        /evuYUA9t/u4JWxj35J9dXD7RrbDLhcRi7r4mAyP2EpxT6ZmkYkWV2f5DTh8PP8A2ZVPTXw0w5j8C2As
        ylqhjRcVtgHKPUtf3As6fEbKF80QKDDpEm7D59QihinbBrU0ZFnnMQKvbH7BO9FMdAC2IrZnRmBUkJSE
        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
        pTtSEiJjeNaFSclKNo0VHGELWNjY5f8Apv/Z
</value>
  </data>
</root>