<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.BackgroundImage" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>